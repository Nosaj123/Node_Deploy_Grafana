---
- hosts: ec2
  gather_facts: no
  remote_user: ubuntu
  become: true
  vars:
      prometheus_dir_configuration: "/etc/prometheus"
      prometheus_retention_time: "365d"
      prometheus_scrape_interval: "30s"
      prometheus_node_exporter: true
      prometheus_node_exporter_group: "all"
      prometheus_env: "production"
      prometheus_var_config:
        global:
          scrape_interval: "{{ prometheus_scrape_interval }}"
          evaluation_interval: 5s
          external_labels:
            env: '{{ prometheus_env }}'
        scrape_configs:
          - job_name: prometheus
            scrape_interval: 5m
            static_configs:
              - targets: ['{{ inventory_hostname }}:9099']

  tasks:

    -name: update and install prometheus
      apt:
        name: prometheus
        state: latest
        update_cache: yes
        cache_valid_time: 3600
    - name: prometheus args
      template:
        src: prometheus.j2
        dest: /etc/default/prometheus
        mode: 0644
        owner: root
        group: root
      notify: restart_prometheus
    - name: prometheus configuration file
      template:
        src: prometheus.yml.j2
        dest: "{{ prometheus_dir_configuration }}/prometheus.yml"
        mode: 0755
        owner: prometheus
        group: prometheus
      notify: reload_prometheus
    - name: start prometheus
      systemd:
        name: prometheus
        state: started
        enabled: yes
    - name: install gpg
      apt:
        name: gnupg,software-properties-common
        state: present
        update_cache: yes
        cache_valid_time: 3600
    - name: add gpg hey
      apt_key:
        url: "https://packages.grafana.com/gpg.key"
        validate_certs: no
    - name: add repository
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present
        validate_certs: no
    - name: install grafana
      apt:
        name: grafana
        state: latest
        update_cache: yes
        cache_valid_time: 3600
    - name: start service grafana-server
      systemd:
        name: grafana-server
        state: started
        enabled: yes
    - name: wait for service up
      uri:
        url: "http://127.0.0.1:3000"
        status_code: 200
      register: __result
      until: __result.status == 200
      retries: 120
      delay: 1
    - name: change admin password for grafana gui
      shell : "grafana-cli admin reset-admin-password {{ grafana_admin_password }}"
      register: __command_admin
      changed_when: __command_admin.rc !=0